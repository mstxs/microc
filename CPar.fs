// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)
open Absyn

// Vardesc 返回的是一个 元组 (g,s)
// g是类型构造函数，s是变量名
// compose1 函数 取出 类型构造子 g，用类型复合机制构造类型。

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10 //  \n 的 ASCII 码





# 26 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | MAX
  | MIN
  | ABS
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | QUES
  | COLON
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | SELFINC
  | SELFDEC
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | BOOL
  | BREAK
  | CASE
  | CHAR
  | DEFAULT
  | DO
  | ELSE
  | FLOAT
  | FOR
  | IF
  | INT
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | STRING
  | SWITCH
  | UNTIL
  | VOID
  | WHILE
  | CSTFLOAT of (float32)
  | CSTCHAR of (char)
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_MAX
    | TOKEN_MIN
    | TOKEN_ABS
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_QUES
    | TOKEN_COLON
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_SELFINC
    | TOKEN_SELFDEC
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_BOOL
    | TOKEN_BREAK
    | TOKEN_CASE
    | TOKEN_CHAR
    | TOKEN_DEFAULT
    | TOKEN_DO
    | TOKEN_ELSE
    | TOKEN_FLOAT
    | TOKEN_FOR
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_STRING
    | TOKEN_SWITCH
    | TOKEN_UNTIL
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_CSTFLOAT
    | TOKEN_CSTCHAR
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtU
    | NONTERM_StmtCase
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_ConstChar
    | NONTERM_ConstString
    | NONTERM_ConstFloat
    | NONTERM_Type

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | MAX  -> 0 
  | MIN  -> 1 
  | ABS  -> 2 
  | EOF  -> 3 
  | LPAR  -> 4 
  | RPAR  -> 5 
  | LBRACE  -> 6 
  | RBRACE  -> 7 
  | LBRACK  -> 8 
  | RBRACK  -> 9 
  | SEMI  -> 10 
  | COMMA  -> 11 
  | ASSIGN  -> 12 
  | AMP  -> 13 
  | QUES  -> 14 
  | COLON  -> 15 
  | NOT  -> 16 
  | SEQOR  -> 17 
  | SEQAND  -> 18 
  | EQ  -> 19 
  | NE  -> 20 
  | GT  -> 21 
  | LT  -> 22 
  | GE  -> 23 
  | LE  -> 24 
  | SELFINC  -> 25 
  | SELFDEC  -> 26 
  | PLUS  -> 27 
  | MINUS  -> 28 
  | TIMES  -> 29 
  | DIV  -> 30 
  | MOD  -> 31 
  | BOOL  -> 32 
  | BREAK  -> 33 
  | CASE  -> 34 
  | CHAR  -> 35 
  | DEFAULT  -> 36 
  | DO  -> 37 
  | ELSE  -> 38 
  | FLOAT  -> 39 
  | FOR  -> 40 
  | IF  -> 41 
  | INT  -> 42 
  | NULL  -> 43 
  | PRINT  -> 44 
  | PRINTLN  -> 45 
  | RETURN  -> 46 
  | STRING  -> 47 
  | SWITCH  -> 48 
  | UNTIL  -> 49 
  | VOID  -> 50 
  | WHILE  -> 51 
  | CSTFLOAT _ -> 52 
  | CSTCHAR _ -> 53 
  | CSTSTRING _ -> 54 
  | NAME _ -> 55 
  | CSTINT _ -> 56 
  | CSTBOOL _ -> 57 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_MAX 
  | 1 -> TOKEN_MIN 
  | 2 -> TOKEN_ABS 
  | 3 -> TOKEN_EOF 
  | 4 -> TOKEN_LPAR 
  | 5 -> TOKEN_RPAR 
  | 6 -> TOKEN_LBRACE 
  | 7 -> TOKEN_RBRACE 
  | 8 -> TOKEN_LBRACK 
  | 9 -> TOKEN_RBRACK 
  | 10 -> TOKEN_SEMI 
  | 11 -> TOKEN_COMMA 
  | 12 -> TOKEN_ASSIGN 
  | 13 -> TOKEN_AMP 
  | 14 -> TOKEN_QUES 
  | 15 -> TOKEN_COLON 
  | 16 -> TOKEN_NOT 
  | 17 -> TOKEN_SEQOR 
  | 18 -> TOKEN_SEQAND 
  | 19 -> TOKEN_EQ 
  | 20 -> TOKEN_NE 
  | 21 -> TOKEN_GT 
  | 22 -> TOKEN_LT 
  | 23 -> TOKEN_GE 
  | 24 -> TOKEN_LE 
  | 25 -> TOKEN_SELFINC 
  | 26 -> TOKEN_SELFDEC 
  | 27 -> TOKEN_PLUS 
  | 28 -> TOKEN_MINUS 
  | 29 -> TOKEN_TIMES 
  | 30 -> TOKEN_DIV 
  | 31 -> TOKEN_MOD 
  | 32 -> TOKEN_BOOL 
  | 33 -> TOKEN_BREAK 
  | 34 -> TOKEN_CASE 
  | 35 -> TOKEN_CHAR 
  | 36 -> TOKEN_DEFAULT 
  | 37 -> TOKEN_DO 
  | 38 -> TOKEN_ELSE 
  | 39 -> TOKEN_FLOAT 
  | 40 -> TOKEN_FOR 
  | 41 -> TOKEN_IF 
  | 42 -> TOKEN_INT 
  | 43 -> TOKEN_NULL 
  | 44 -> TOKEN_PRINT 
  | 45 -> TOKEN_PRINTLN 
  | 46 -> TOKEN_RETURN 
  | 47 -> TOKEN_STRING 
  | 48 -> TOKEN_SWITCH 
  | 49 -> TOKEN_UNTIL 
  | 50 -> TOKEN_VOID 
  | 51 -> TOKEN_WHILE 
  | 52 -> TOKEN_CSTFLOAT 
  | 53 -> TOKEN_CSTCHAR 
  | 54 -> TOKEN_CSTSTRING 
  | 55 -> TOKEN_NAME 
  | 56 -> TOKEN_CSTINT 
  | 57 -> TOKEN_CSTBOOL 
  | 60 -> TOKEN_end_of_input
  | 58 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Vardec 
    | 7 -> NONTERM_Vardesc 
    | 8 -> NONTERM_Vardesc 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Fundec 
    | 13 -> NONTERM_Fundec 
    | 14 -> NONTERM_Paramdecs 
    | 15 -> NONTERM_Paramdecs 
    | 16 -> NONTERM_Paramdecs1 
    | 17 -> NONTERM_Paramdecs1 
    | 18 -> NONTERM_Block 
    | 19 -> NONTERM_StmtOrDecSeq 
    | 20 -> NONTERM_StmtOrDecSeq 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_Stmt 
    | 23 -> NONTERM_Stmt 
    | 24 -> NONTERM_StmtM 
    | 25 -> NONTERM_StmtM 
    | 26 -> NONTERM_StmtM 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtM 
    | 33 -> NONTERM_StmtM 
    | 34 -> NONTERM_StmtM 
    | 35 -> NONTERM_StmtU 
    | 36 -> NONTERM_StmtU 
    | 37 -> NONTERM_StmtU 
    | 38 -> NONTERM_StmtCase 
    | 39 -> NONTERM_StmtCase 
    | 40 -> NONTERM_StmtCase 
    | 41 -> NONTERM_Expr 
    | 42 -> NONTERM_Expr 
    | 43 -> NONTERM_ExprNotAccess 
    | 44 -> NONTERM_ExprNotAccess 
    | 45 -> NONTERM_ExprNotAccess 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_ExprNotAccess 
    | 61 -> NONTERM_ExprNotAccess 
    | 62 -> NONTERM_ExprNotAccess 
    | 63 -> NONTERM_ExprNotAccess 
    | 64 -> NONTERM_ExprNotAccess 
    | 65 -> NONTERM_ExprNotAccess 
    | 66 -> NONTERM_ExprNotAccess 
    | 67 -> NONTERM_ExprNotAccess 
    | 68 -> NONTERM_ExprNotAccess 
    | 69 -> NONTERM_ExprNotAccess 
    | 70 -> NONTERM_AtExprNotAccess 
    | 71 -> NONTERM_AtExprNotAccess 
    | 72 -> NONTERM_AtExprNotAccess 
    | 73 -> NONTERM_AtExprNotAccess 
    | 74 -> NONTERM_AtExprNotAccess 
    | 75 -> NONTERM_AtExprNotAccess 
    | 76 -> NONTERM_Access 
    | 77 -> NONTERM_Access 
    | 78 -> NONTERM_Access 
    | 79 -> NONTERM_Access 
    | 80 -> NONTERM_Access 
    | 81 -> NONTERM_Exprs 
    | 82 -> NONTERM_Exprs 
    | 83 -> NONTERM_Exprs1 
    | 84 -> NONTERM_Exprs1 
    | 85 -> NONTERM_Const 
    | 86 -> NONTERM_Const 
    | 87 -> NONTERM_Const 
    | 88 -> NONTERM_Const 
    | 89 -> NONTERM_ConstChar 
    | 90 -> NONTERM_ConstString 
    | 91 -> NONTERM_ConstFloat 
    | 92 -> NONTERM_ConstFloat 
    | 93 -> NONTERM_Type 
    | 94 -> NONTERM_Type 
    | 95 -> NONTERM_Type 
    | 96 -> NONTERM_Type 
    | 97 -> NONTERM_Type 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 60 
let _fsyacc_tagOfErrorTerminal = 58

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | MAX  -> "MAX" 
  | MIN  -> "MIN" 
  | ABS  -> "ABS" 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | QUES  -> "QUES" 
  | COLON  -> "COLON" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | SELFINC  -> "SELFINC" 
  | SELFDEC  -> "SELFDEC" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | BOOL  -> "BOOL" 
  | BREAK  -> "BREAK" 
  | CASE  -> "CASE" 
  | CHAR  -> "CHAR" 
  | DEFAULT  -> "DEFAULT" 
  | DO  -> "DO" 
  | ELSE  -> "ELSE" 
  | FLOAT  -> "FLOAT" 
  | FOR  -> "FOR" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | STRING  -> "STRING" 
  | SWITCH  -> "SWITCH" 
  | UNTIL  -> "UNTIL" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | CSTFLOAT _ -> "CSTFLOAT" 
  | CSTCHAR _ -> "CSTCHAR" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | MAX  -> (null : System.Object) 
  | MIN  -> (null : System.Object) 
  | ABS  -> (null : System.Object) 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | QUES  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | SELFINC  -> (null : System.Object) 
  | SELFDEC  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | BOOL  -> (null : System.Object) 
  | BREAK  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | DEFAULT  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | FLOAT  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | STRING  -> (null : System.Object) 
  | SWITCH  -> (null : System.Object) 
  | UNTIL  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | CSTFLOAT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTCHAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 4us; 5us; 2us; 65535us; 0us; 4us; 4us; 4us; 8us; 65535us; 0us; 6us; 4us; 6us; 25us; 34us; 29us; 34us; 35us; 34us; 37us; 42us; 40us; 42us; 43us; 42us; 4us; 65535us; 9us; 11us; 10us; 11us; 14us; 15us; 16us; 17us; 2us; 65535us; 0us; 8us; 4us; 8us; 2us; 65535us; 25us; 26us; 29us; 30us; 3us; 65535us; 25us; 33us; 29us; 33us; 35us; 36us; 15us; 65535us; 27us; 28us; 31us; 32us; 37us; 54us; 40us; 54us; 43us; 54us; 61us; 54us; 62us; 54us; 64us; 54us; 65us; 54us; 82us; 54us; 83us; 54us; 92us; 54us; 94us; 54us; 111us; 54us; 114us; 54us; 3us; 65535us; 37us; 38us; 40us; 41us; 43us; 44us; 4us; 65535us; 37us; 40us; 40us; 40us; 43us; 40us; 62us; 107us; 13us; 65535us; 37us; 45us; 40us; 45us; 43us; 45us; 61us; 63us; 62us; 46us; 64us; 66us; 65us; 66us; 82us; 84us; 83us; 84us; 92us; 93us; 94us; 95us; 111us; 112us; 114us; 115us; 6us; 65535us; 37us; 47us; 40us; 47us; 43us; 47us; 62us; 47us; 65us; 106us; 83us; 108us; 2us; 65535us; 71us; 72us; 112us; 116us; 52us; 65535us; 37us; 48us; 40us; 48us; 43us; 48us; 50us; 52us; 57us; 60us; 58us; 59us; 61us; 48us; 62us; 48us; 64us; 48us; 65us; 48us; 68us; 69us; 78us; 81us; 79us; 80us; 82us; 48us; 83us; 48us; 86us; 87us; 88us; 89us; 90us; 91us; 92us; 48us; 94us; 48us; 97us; 98us; 102us; 103us; 111us; 48us; 114us; 48us; 128us; 129us; 131us; 161us; 134us; 135us; 136us; 137us; 162us; 139us; 163us; 140us; 164us; 141us; 165us; 142us; 166us; 143us; 167us; 144us; 168us; 145us; 169us; 146us; 170us; 147us; 171us; 148us; 172us; 149us; 173us; 150us; 174us; 151us; 175us; 152us; 176us; 154us; 178us; 155us; 179us; 156us; 182us; 157us; 183us; 158us; 186us; 159us; 192us; 153us; 193us; 153us; 204us; 160us; 207us; 161us; 52us; 65535us; 37us; 119us; 40us; 119us; 43us; 119us; 50us; 119us; 57us; 119us; 58us; 119us; 61us; 119us; 62us; 119us; 64us; 119us; 65us; 119us; 68us; 119us; 78us; 119us; 79us; 119us; 82us; 119us; 83us; 119us; 86us; 119us; 88us; 119us; 90us; 119us; 92us; 119us; 94us; 119us; 97us; 119us; 102us; 119us; 111us; 119us; 114us; 119us; 128us; 119us; 131us; 119us; 134us; 119us; 136us; 119us; 162us; 119us; 163us; 119us; 164us; 119us; 165us; 119us; 166us; 119us; 167us; 119us; 168us; 119us; 169us; 119us; 170us; 119us; 171us; 119us; 172us; 119us; 173us; 119us; 174us; 119us; 175us; 119us; 176us; 119us; 178us; 119us; 179us; 119us; 182us; 119us; 183us; 119us; 186us; 119us; 192us; 120us; 193us; 120us; 204us; 119us; 207us; 119us; 54us; 65535us; 37us; 121us; 40us; 121us; 43us; 121us; 50us; 121us; 57us; 121us; 58us; 121us; 61us; 121us; 62us; 121us; 64us; 121us; 65us; 121us; 68us; 121us; 78us; 121us; 79us; 121us; 82us; 121us; 83us; 121us; 86us; 121us; 88us; 121us; 90us; 121us; 92us; 121us; 94us; 121us; 97us; 121us; 102us; 121us; 109us; 110us; 111us; 121us; 114us; 121us; 128us; 121us; 131us; 121us; 134us; 121us; 136us; 121us; 162us; 121us; 163us; 121us; 164us; 121us; 165us; 121us; 166us; 121us; 167us; 121us; 168us; 121us; 169us; 121us; 170us; 121us; 171us; 121us; 172us; 121us; 173us; 121us; 174us; 121us; 175us; 121us; 176us; 121us; 178us; 121us; 179us; 121us; 182us; 121us; 183us; 121us; 186us; 121us; 192us; 121us; 193us; 121us; 201us; 203us; 204us; 121us; 207us; 121us; 57us; 65535us; 37us; 118us; 40us; 118us; 43us; 118us; 50us; 118us; 57us; 118us; 58us; 118us; 61us; 118us; 62us; 118us; 64us; 118us; 65us; 118us; 68us; 118us; 78us; 118us; 79us; 118us; 82us; 118us; 83us; 118us; 86us; 118us; 88us; 118us; 90us; 118us; 92us; 118us; 94us; 118us; 97us; 118us; 102us; 118us; 111us; 118us; 114us; 118us; 122us; 123us; 124us; 125us; 128us; 118us; 131us; 118us; 134us; 118us; 136us; 118us; 162us; 118us; 163us; 118us; 164us; 118us; 165us; 118us; 166us; 118us; 167us; 118us; 168us; 118us; 169us; 118us; 170us; 118us; 171us; 118us; 172us; 118us; 173us; 118us; 174us; 118us; 175us; 118us; 176us; 118us; 178us; 118us; 179us; 118us; 182us; 118us; 183us; 118us; 186us; 118us; 192us; 118us; 193us; 117us; 195us; 196us; 198us; 199us; 201us; 202us; 204us; 118us; 207us; 118us; 1us; 65535us; 131us; 132us; 2us; 65535us; 131us; 206us; 207us; 208us; 54us; 65535us; 37us; 188us; 40us; 188us; 43us; 188us; 50us; 188us; 57us; 188us; 58us; 188us; 61us; 188us; 62us; 188us; 64us; 188us; 65us; 188us; 68us; 188us; 78us; 188us; 79us; 188us; 82us; 188us; 83us; 188us; 86us; 188us; 88us; 188us; 90us; 188us; 92us; 188us; 94us; 188us; 97us; 188us; 102us; 188us; 109us; 188us; 111us; 188us; 114us; 188us; 128us; 188us; 131us; 188us; 134us; 188us; 136us; 188us; 162us; 188us; 163us; 188us; 164us; 188us; 165us; 188us; 166us; 188us; 167us; 188us; 168us; 188us; 169us; 188us; 170us; 188us; 171us; 188us; 172us; 188us; 173us; 188us; 174us; 188us; 175us; 188us; 176us; 188us; 178us; 188us; 179us; 188us; 182us; 188us; 183us; 188us; 186us; 188us; 192us; 188us; 193us; 188us; 201us; 188us; 204us; 188us; 207us; 188us; 54us; 65535us; 37us; 189us; 40us; 189us; 43us; 189us; 50us; 189us; 57us; 189us; 58us; 189us; 61us; 189us; 62us; 189us; 64us; 189us; 65us; 189us; 68us; 189us; 78us; 189us; 79us; 189us; 82us; 189us; 83us; 189us; 86us; 189us; 88us; 189us; 90us; 189us; 92us; 189us; 94us; 189us; 97us; 189us; 102us; 189us; 109us; 189us; 111us; 189us; 114us; 189us; 128us; 189us; 131us; 189us; 134us; 189us; 136us; 189us; 162us; 189us; 163us; 189us; 164us; 189us; 165us; 189us; 166us; 189us; 167us; 189us; 168us; 189us; 169us; 189us; 170us; 189us; 171us; 189us; 172us; 189us; 173us; 189us; 174us; 189us; 175us; 189us; 176us; 189us; 178us; 189us; 179us; 189us; 182us; 189us; 183us; 189us; 186us; 189us; 192us; 189us; 193us; 189us; 201us; 189us; 204us; 189us; 207us; 189us; 54us; 65535us; 37us; 190us; 40us; 190us; 43us; 190us; 50us; 190us; 57us; 190us; 58us; 190us; 61us; 190us; 62us; 190us; 64us; 190us; 65us; 190us; 68us; 190us; 78us; 190us; 79us; 190us; 82us; 190us; 83us; 190us; 86us; 190us; 88us; 190us; 90us; 190us; 92us; 190us; 94us; 190us; 97us; 190us; 102us; 190us; 109us; 190us; 111us; 190us; 114us; 190us; 128us; 190us; 131us; 190us; 134us; 190us; 136us; 190us; 162us; 190us; 163us; 190us; 164us; 190us; 165us; 190us; 166us; 190us; 167us; 190us; 168us; 190us; 169us; 190us; 170us; 190us; 171us; 190us; 172us; 190us; 173us; 190us; 174us; 190us; 175us; 190us; 176us; 190us; 178us; 190us; 179us; 190us; 182us; 190us; 183us; 190us; 186us; 190us; 192us; 190us; 193us; 190us; 201us; 190us; 204us; 190us; 207us; 190us; 54us; 65535us; 37us; 191us; 40us; 191us; 43us; 191us; 50us; 191us; 57us; 191us; 58us; 191us; 61us; 191us; 62us; 191us; 64us; 191us; 65us; 191us; 68us; 191us; 78us; 191us; 79us; 191us; 82us; 191us; 83us; 191us; 86us; 191us; 88us; 191us; 90us; 191us; 92us; 191us; 94us; 191us; 97us; 191us; 102us; 191us; 109us; 191us; 111us; 191us; 114us; 191us; 128us; 191us; 131us; 191us; 134us; 191us; 136us; 191us; 162us; 191us; 163us; 191us; 164us; 191us; 165us; 191us; 166us; 191us; 167us; 191us; 168us; 191us; 169us; 191us; 170us; 191us; 171us; 191us; 172us; 191us; 173us; 191us; 174us; 191us; 175us; 191us; 176us; 191us; 178us; 191us; 179us; 191us; 182us; 191us; 183us; 191us; 186us; 191us; 192us; 191us; 193us; 191us; 201us; 191us; 204us; 191us; 207us; 191us; 8us; 65535us; 0us; 10us; 4us; 10us; 25us; 9us; 29us; 9us; 35us; 9us; 37us; 9us; 40us; 9us; 43us; 9us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 18us; 23us; 26us; 29us; 33us; 49us; 53us; 58us; 72us; 79us; 82us; 135us; 188us; 243us; 301us; 303us; 306us; 361us; 416us; 471us; 526us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 6us; 2us; 6us; 13us; 3us; 6us; 10us; 11us; 1us; 7us; 2us; 7us; 13us; 1us; 8us; 3us; 8us; 10us; 11us; 1us; 9us; 3us; 9us; 10us; 11us; 1us; 9us; 2us; 10us; 11us; 1us; 10us; 1us; 11us; 1us; 11us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 15us; 2us; 16us; 17us; 1us; 17us; 1us; 17us; 1us; 18us; 1us; 18us; 1us; 18us; 1us; 20us; 1us; 20us; 1us; 21us; 1us; 21us; 1us; 21us; 1us; 22us; 3us; 22us; 28us; 35us; 1us; 23us; 15us; 24us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 24us; 2us; 25us; 26us; 1us; 25us; 15us; 26us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 26us; 1us; 27us; 1us; 28us; 3us; 28us; 35us; 36us; 1us; 28us; 3us; 28us; 35us; 36us; 17us; 28us; 35us; 36us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 15us; 28us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 28us; 3us; 28us; 35us; 36us; 1us; 28us; 1us; 28us; 2us; 28us; 35us; 1us; 28us; 1us; 29us; 1us; 29us; 15us; 29us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 29us; 1us; 29us; 1us; 29us; 1us; 29us; 1us; 30us; 1us; 30us; 1us; 31us; 2us; 31us; 37us; 1us; 31us; 2us; 31us; 37us; 16us; 31us; 37us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 15us; 31us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 31us; 2us; 31us; 37us; 1us; 31us; 1us; 32us; 1us; 32us; 15us; 32us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 32us; 15us; 32us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 32us; 15us; 32us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 32us; 1us; 32us; 2us; 33us; 34us; 2us; 33us; 34us; 1us; 33us; 1us; 33us; 15us; 33us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 33us; 1us; 33us; 1us; 34us; 1us; 34us; 15us; 34us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 34us; 1us; 34us; 1us; 35us; 1us; 36us; 1us; 37us; 2us; 38us; 40us; 2us; 38us; 40us; 2us; 38us; 40us; 2us; 38us; 40us; 1us; 39us; 1us; 39us; 1us; 39us; 1us; 40us; 6us; 41us; 46us; 47us; 48us; 77us; 80us; 5us; 41us; 46us; 47us; 48us; 80us; 1us; 42us; 2us; 42us; 74us; 1us; 43us; 1us; 44us; 2us; 44us; 80us; 1us; 45us; 2us; 45us; 80us; 1us; 46us; 1us; 47us; 1us; 48us; 15us; 48us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 2us; 49us; 76us; 1us; 49us; 1us; 49us; 1us; 49us; 1us; 50us; 15us; 50us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 51us; 15us; 51us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 1us; 52us; 15us; 53us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 15us; 53us; 54us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 15us; 53us; 54us; 55us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 15us; 53us; 54us; 55us; 56us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 15us; 53us; 54us; 55us; 56us; 57us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 15us; 53us; 54us; 55us; 56us; 57us; 58us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 15us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 15us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 15us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 61us; 62us; 63us; 64us; 65us; 66us; 15us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 62us; 63us; 64us; 65us; 66us; 15us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 63us; 64us; 65us; 66us; 15us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 64us; 65us; 66us; 15us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 64us; 65us; 66us; 15us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 65us; 66us; 14us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 15us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 66us; 15us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 15us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 15us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 68us; 15us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 68us; 15us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 69us; 15us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 80us; 16us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 83us; 84us; 1us; 53us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 63us; 1us; 64us; 1us; 64us; 1us; 65us; 1us; 66us; 1us; 67us; 1us; 67us; 1us; 67us; 1us; 67us; 1us; 68us; 1us; 68us; 1us; 68us; 1us; 68us; 1us; 69us; 1us; 69us; 1us; 69us; 1us; 70us; 1us; 71us; 1us; 72us; 1us; 73us; 1us; 74us; 2us; 74us; 77us; 1us; 74us; 1us; 75us; 2us; 75us; 80us; 1us; 76us; 1us; 77us; 2us; 77us; 80us; 1us; 77us; 2us; 78us; 79us; 2us; 78us; 80us; 1us; 79us; 1us; 80us; 1us; 80us; 1us; 82us; 1us; 84us; 1us; 84us; 1us; 85us; 1us; 86us; 2us; 87us; 92us; 1us; 87us; 1us; 88us; 1us; 89us; 1us; 90us; 1us; 91us; 1us; 92us; 1us; 93us; 1us; 94us; 1us; 95us; 1us; 96us; 1us; 97us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 23us; 27us; 29us; 32us; 34us; 38us; 40us; 44us; 46us; 49us; 51us; 53us; 55us; 57us; 59us; 61us; 63us; 65us; 67us; 69us; 71us; 73us; 75us; 77us; 80us; 82us; 84us; 86us; 88us; 90us; 92us; 94us; 96us; 98us; 100us; 102us; 106us; 108us; 124us; 126us; 129us; 131us; 147us; 149us; 151us; 153us; 157us; 159us; 163us; 181us; 197us; 199us; 203us; 205us; 207us; 210us; 212us; 214us; 216us; 232us; 234us; 236us; 238us; 240us; 242us; 244us; 246us; 249us; 251us; 254us; 271us; 287us; 289us; 292us; 294us; 296us; 298us; 314us; 316us; 332us; 334us; 350us; 352us; 354us; 357us; 360us; 362us; 364us; 380us; 382us; 384us; 386us; 388us; 404us; 406us; 408us; 410us; 412us; 414us; 417us; 420us; 423us; 426us; 428us; 430us; 432us; 434us; 441us; 447us; 449us; 452us; 454us; 456us; 459us; 461us; 464us; 466us; 468us; 470us; 486us; 489us; 491us; 493us; 495us; 497us; 513us; 515us; 531us; 533us; 549us; 565us; 581us; 597us; 613us; 629us; 645us; 661us; 677us; 693us; 709us; 725us; 741us; 757us; 772us; 788us; 804us; 820us; 836us; 852us; 868us; 884us; 901us; 903us; 905us; 907us; 909us; 911us; 913us; 915us; 917us; 919us; 921us; 923us; 925us; 927us; 929us; 931us; 933us; 935us; 937us; 939us; 941us; 943us; 945us; 947us; 949us; 951us; 953us; 955us; 957us; 959us; 961us; 963us; 966us; 968us; 970us; 973us; 975us; 977us; 980us; 982us; 985us; 988us; 990us; 992us; 994us; 996us; 998us; 1000us; 1002us; 1004us; 1007us; 1009us; 1011us; 1013us; 1015us; 1017us; 1019us; 1021us; 1023us; 1025us; 1027us; |]
let _fsyacc_action_rows = 223
let _fsyacc_actionTableElements = [|6us; 16386us; 32us; 222us; 35us; 219us; 39us; 221us; 42us; 218us; 47us; 220us; 50us; 23us; 0us; 49152us; 1us; 32768us; 3us; 3us; 0us; 16385us; 6us; 16386us; 32us; 222us; 35us; 219us; 39us; 221us; 42us; 218us; 47us; 220us; 50us; 23us; 0us; 16387us; 1us; 32768us; 10us; 7us; 0us; 16388us; 0us; 16389us; 3us; 32768us; 4us; 16us; 29us; 14us; 55us; 12us; 3us; 32768us; 4us; 16us; 29us; 14us; 55us; 13us; 1us; 16390us; 8us; 19us; 0us; 16391us; 1us; 16391us; 4us; 29us; 3us; 32768us; 4us; 16us; 29us; 14us; 55us; 12us; 1us; 16392us; 8us; 19us; 3us; 32768us; 4us; 16us; 29us; 14us; 55us; 12us; 2us; 32768us; 5us; 18us; 8us; 19us; 0us; 16393us; 2us; 32768us; 9us; 20us; 56us; 21us; 0us; 16394us; 1us; 32768us; 9us; 22us; 0us; 16395us; 1us; 32768us; 55us; 24us; 1us; 32768us; 4us; 25us; 5us; 16398us; 32us; 222us; 35us; 219us; 39us; 221us; 42us; 218us; 47us; 220us; 1us; 32768us; 5us; 27us; 1us; 32768us; 6us; 37us; 0us; 16396us; 5us; 16398us; 32us; 222us; 35us; 219us; 39us; 221us; 42us; 218us; 47us; 220us; 1us; 32768us; 5us; 31us; 1us; 32768us; 6us; 37us; 0us; 16397us; 0us; 16399us; 1us; 16400us; 11us; 35us; 5us; 32768us; 32us; 222us; 35us; 219us; 39us; 221us; 42us; 218us; 47us; 220us; 0us; 16401us; 32us; 16403us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 6us; 37us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 32us; 222us; 33us; 74us; 35us; 219us; 37us; 94us; 39us; 221us; 40us; 85us; 41us; 56us; 42us; 218us; 43us; 213us; 44us; 136us; 45us; 138us; 46us; 50us; 47us; 220us; 48us; 67us; 51us; 77us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 1us; 32768us; 7us; 39us; 0us; 16402us; 32us; 16403us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 6us; 37us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 32us; 222us; 33us; 74us; 35us; 219us; 37us; 94us; 39us; 221us; 40us; 85us; 41us; 56us; 42us; 218us; 43us; 213us; 44us; 136us; 45us; 138us; 46us; 50us; 47us; 220us; 48us; 67us; 51us; 77us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 0us; 16404us; 1us; 32768us; 10us; 43us; 32us; 16403us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 6us; 37us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 32us; 222us; 33us; 74us; 35us; 219us; 37us; 94us; 39us; 221us; 40us; 85us; 41us; 56us; 42us; 218us; 43us; 213us; 44us; 136us; 45us; 138us; 46us; 50us; 47us; 220us; 48us; 67us; 51us; 77us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 0us; 16405us; 0us; 16406us; 1us; 16406us; 38us; 65us; 0us; 16407us; 15us; 32768us; 10us; 49us; 14us; 173us; 17us; 176us; 18us; 175us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 170us; 23us; 171us; 24us; 172us; 27us; 162us; 28us; 163us; 29us; 164us; 30us; 165us; 31us; 166us; 0us; 16408us; 20us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 10us; 51us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 43us; 213us; 44us; 136us; 45us; 138us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 0us; 16409us; 15us; 32768us; 10us; 53us; 14us; 173us; 17us; 176us; 18us; 175us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 170us; 23us; 171us; 24us; 172us; 27us; 162us; 28us; 163us; 29us; 164us; 30us; 165us; 31us; 166us; 0us; 16410us; 0us; 16411us; 1us; 32768us; 4us; 57us; 1us; 32768us; 4us; 58us; 19us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 43us; 213us; 44us; 136us; 45us; 138us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 19us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 43us; 213us; 44us; 136us; 45us; 138us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 15us; 32768us; 5us; 62us; 14us; 173us; 17us; 176us; 18us; 175us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 170us; 23us; 171us; 24us; 172us; 27us; 162us; 28us; 163us; 29us; 164us; 30us; 165us; 31us; 166us; 15us; 32768us; 5us; 61us; 14us; 173us; 17us; 176us; 18us; 175us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 170us; 23us; 171us; 24us; 172us; 27us; 162us; 28us; 163us; 29us; 164us; 30us; 165us; 31us; 166us; 27us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 6us; 37us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 33us; 74us; 37us; 94us; 40us; 85us; 41us; 55us; 43us; 213us; 44us; 136us; 45us; 138us; 46us; 50us; 48us; 67us; 51us; 76us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 27us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 6us; 37us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 33us; 74us; 37us; 94us; 40us; 85us; 41us; 56us; 43us; 213us; 44us; 136us; 45us; 138us; 46us; 50us; 48us; 67us; 51us; 77us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 1us; 32768us; 38us; 64us; 27us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 6us; 37us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 33us; 74us; 37us; 94us; 40us; 85us; 41us; 55us; 43us; 213us; 44us; 136us; 45us; 138us; 46us; 50us; 48us; 67us; 51us; 76us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 27us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 6us; 37us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 33us; 74us; 37us; 94us; 40us; 85us; 41us; 56us; 43us; 213us; 44us; 136us; 45us; 138us; 46us; 50us; 48us; 67us; 51us; 77us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 0us; 16412us; 1us; 32768us; 4us; 68us; 19us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 43us; 213us; 44us; 136us; 45us; 138us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 15us; 32768us; 5us; 70us; 14us; 173us; 17us; 176us; 18us; 175us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 170us; 23us; 171us; 24us; 172us; 27us; 162us; 28us; 163us; 29us; 164us; 30us; 165us; 31us; 166us; 1us; 32768us; 6us; 71us; 2us; 32768us; 34us; 109us; 36us; 113us; 1us; 32768us; 7us; 73us; 0us; 16413us; 1us; 32768us; 10us; 75us; 0us; 16414us; 1us; 32768us; 4us; 78us; 1us; 32768us; 4us; 79us; 19us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 43us; 213us; 44us; 136us; 45us; 138us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 19us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 43us; 213us; 44us; 136us; 45us; 138us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 15us; 32768us; 5us; 83us; 14us; 173us; 17us; 176us; 18us; 175us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 170us; 23us; 171us; 24us; 172us; 27us; 162us; 28us; 163us; 29us; 164us; 30us; 165us; 31us; 166us; 15us; 32768us; 5us; 82us; 14us; 173us; 17us; 176us; 18us; 175us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 170us; 23us; 171us; 24us; 172us; 27us; 162us; 28us; 163us; 29us; 164us; 30us; 165us; 31us; 166us; 27us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 6us; 37us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 33us; 74us; 37us; 94us; 40us; 85us; 41us; 55us; 43us; 213us; 44us; 136us; 45us; 138us; 46us; 50us; 48us; 67us; 51us; 76us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 27us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 6us; 37us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 33us; 74us; 37us; 94us; 40us; 85us; 41us; 56us; 43us; 213us; 44us; 136us; 45us; 138us; 46us; 50us; 48us; 67us; 51us; 77us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 0us; 16415us; 1us; 32768us; 4us; 86us; 19us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 43us; 213us; 44us; 136us; 45us; 138us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 15us; 32768us; 10us; 88us; 14us; 173us; 17us; 176us; 18us; 175us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 170us; 23us; 171us; 24us; 172us; 27us; 162us; 28us; 163us; 29us; 164us; 30us; 165us; 31us; 166us; 19us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 43us; 213us; 44us; 136us; 45us; 138us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 15us; 32768us; 10us; 90us; 14us; 173us; 17us; 176us; 18us; 175us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 170us; 23us; 171us; 24us; 172us; 27us; 162us; 28us; 163us; 29us; 164us; 30us; 165us; 31us; 166us; 19us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 43us; 213us; 44us; 136us; 45us; 138us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 15us; 32768us; 5us; 92us; 14us; 173us; 17us; 176us; 18us; 175us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 170us; 23us; 171us; 24us; 172us; 27us; 162us; 28us; 163us; 29us; 164us; 30us; 165us; 31us; 166us; 27us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 6us; 37us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 33us; 74us; 37us; 94us; 40us; 85us; 41us; 55us; 43us; 213us; 44us; 136us; 45us; 138us; 46us; 50us; 48us; 67us; 51us; 76us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 0us; 16416us; 27us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 6us; 37us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 33us; 74us; 37us; 94us; 40us; 85us; 41us; 55us; 43us; 213us; 44us; 136us; 45us; 138us; 46us; 50us; 48us; 67us; 51us; 76us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 2us; 32768us; 49us; 101us; 51us; 96us; 1us; 32768us; 4us; 97us; 19us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 43us; 213us; 44us; 136us; 45us; 138us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 15us; 32768us; 5us; 99us; 14us; 173us; 17us; 176us; 18us; 175us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 170us; 23us; 171us; 24us; 172us; 27us; 162us; 28us; 163us; 29us; 164us; 30us; 165us; 31us; 166us; 1us; 32768us; 10us; 100us; 0us; 16417us; 1us; 32768us; 4us; 102us; 19us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 43us; 213us; 44us; 136us; 45us; 138us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 15us; 32768us; 5us; 104us; 14us; 173us; 17us; 176us; 18us; 175us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 170us; 23us; 171us; 24us; 172us; 27us; 162us; 28us; 163us; 29us; 164us; 30us; 165us; 31us; 166us; 1us; 32768us; 10us; 105us; 0us; 16418us; 0us; 16419us; 0us; 16420us; 0us; 16421us; 9us; 32768us; 4us; 192us; 13us; 195us; 28us; 211us; 43us; 213us; 52us; 216us; 53us; 214us; 54us; 215us; 56us; 209us; 57us; 210us; 1us; 32768us; 15us; 111us; 27us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 6us; 37us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 33us; 74us; 37us; 94us; 40us; 85us; 41us; 55us; 43us; 213us; 44us; 136us; 45us; 138us; 46us; 50us; 48us; 67us; 51us; 76us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 2us; 16422us; 34us; 109us; 36us; 113us; 1us; 32768us; 15us; 114us; 27us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 6us; 37us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 33us; 74us; 37us; 94us; 40us; 85us; 41us; 55us; 43us; 213us; 44us; 136us; 45us; 138us; 46us; 50us; 48us; 67us; 51us; 76us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 0us; 16423us; 0us; 16424us; 5us; 16425us; 5us; 200us; 8us; 204us; 12us; 128us; 25us; 126us; 26us; 127us; 4us; 16425us; 8us; 204us; 12us; 128us; 25us; 126us; 26us; 127us; 0us; 16426us; 1us; 16426us; 5us; 194us; 0us; 16427us; 3us; 32768us; 4us; 198us; 29us; 201us; 55us; 197us; 1us; 16428us; 8us; 204us; 3us; 32768us; 4us; 198us; 29us; 201us; 55us; 197us; 1us; 16429us; 8us; 204us; 0us; 16430us; 0us; 16431us; 19us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 43us; 213us; 44us; 136us; 45us; 138us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 14us; 16432us; 14us; 173us; 17us; 176us; 18us; 175us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 170us; 23us; 171us; 24us; 172us; 27us; 162us; 28us; 163us; 29us; 164us; 30us; 165us; 31us; 166us; 1us; 16460us; 4us; 131us; 19us; 16465us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 43us; 213us; 44us; 136us; 45us; 138us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 1us; 32768us; 5us; 133us; 0us; 16433us; 19us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 43us; 213us; 44us; 136us; 45us; 138us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 0us; 16434us; 19us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 43us; 213us; 44us; 136us; 45us; 138us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 14us; 16435us; 14us; 173us; 17us; 176us; 18us; 175us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 170us; 23us; 171us; 24us; 172us; 27us; 162us; 28us; 163us; 29us; 164us; 30us; 165us; 31us; 166us; 0us; 16436us; 3us; 16437us; 29us; 164us; 30us; 165us; 31us; 166us; 3us; 16438us; 29us; 164us; 30us; 165us; 31us; 166us; 0us; 16439us; 0us; 16440us; 0us; 16441us; 9us; 16442us; 21us; 169us; 22us; 170us; 23us; 171us; 24us; 172us; 27us; 162us; 28us; 163us; 29us; 164us; 30us; 165us; 31us; 166us; 9us; 16443us; 21us; 169us; 22us; 170us; 23us; 171us; 24us; 172us; 27us; 162us; 28us; 163us; 29us; 164us; 30us; 165us; 31us; 166us; 9us; 16444us; 21us; 169us; 22us; 170us; 23us; 171us; 24us; 172us; 27us; 162us; 28us; 163us; 29us; 164us; 30us; 165us; 31us; 166us; 9us; 16445us; 21us; 169us; 22us; 170us; 23us; 171us; 24us; 172us; 27us; 162us; 28us; 163us; 29us; 164us; 30us; 165us; 31us; 166us; 9us; 16446us; 21us; 169us; 22us; 170us; 23us; 171us; 24us; 172us; 27us; 162us; 28us; 163us; 29us; 164us; 30us; 165us; 31us; 166us; 9us; 16447us; 21us; 169us; 22us; 170us; 23us; 171us; 24us; 172us; 27us; 162us; 28us; 163us; 29us; 164us; 30us; 165us; 31us; 166us; 15us; 32768us; 14us; 173us; 15us; 174us; 17us; 176us; 18us; 175us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 170us; 23us; 171us; 24us; 172us; 27us; 162us; 28us; 163us; 29us; 164us; 30us; 165us; 31us; 166us; 14us; 16448us; 14us; 173us; 17us; 176us; 18us; 175us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 170us; 23us; 171us; 24us; 172us; 27us; 162us; 28us; 163us; 29us; 164us; 30us; 165us; 31us; 166us; 11us; 16449us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 170us; 23us; 171us; 24us; 172us; 27us; 162us; 28us; 163us; 29us; 164us; 30us; 165us; 31us; 166us; 14us; 32768us; 14us; 173us; 17us; 176us; 18us; 175us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 170us; 23us; 171us; 24us; 172us; 27us; 162us; 28us; 163us; 29us; 164us; 30us; 165us; 31us; 166us; 12us; 16450us; 18us; 175us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 170us; 23us; 171us; 24us; 172us; 27us; 162us; 28us; 163us; 29us; 164us; 30us; 165us; 31us; 166us; 15us; 32768us; 11us; 179us; 14us; 173us; 17us; 176us; 18us; 175us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 170us; 23us; 171us; 24us; 172us; 27us; 162us; 28us; 163us; 29us; 164us; 30us; 165us; 31us; 166us; 15us; 32768us; 5us; 180us; 14us; 173us; 17us; 176us; 18us; 175us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 170us; 23us; 171us; 24us; 172us; 27us; 162us; 28us; 163us; 29us; 164us; 30us; 165us; 31us; 166us; 15us; 32768us; 11us; 183us; 14us; 173us; 17us; 176us; 18us; 175us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 170us; 23us; 171us; 24us; 172us; 27us; 162us; 28us; 163us; 29us; 164us; 30us; 165us; 31us; 166us; 15us; 32768us; 5us; 184us; 14us; 173us; 17us; 176us; 18us; 175us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 170us; 23us; 171us; 24us; 172us; 27us; 162us; 28us; 163us; 29us; 164us; 30us; 165us; 31us; 166us; 15us; 32768us; 5us; 187us; 14us; 173us; 17us; 176us; 18us; 175us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 170us; 23us; 171us; 24us; 172us; 27us; 162us; 28us; 163us; 29us; 164us; 30us; 165us; 31us; 166us; 15us; 32768us; 9us; 205us; 14us; 173us; 17us; 176us; 18us; 175us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 170us; 23us; 171us; 24us; 172us; 27us; 162us; 28us; 163us; 29us; 164us; 30us; 165us; 31us; 166us; 15us; 16467us; 11us; 207us; 14us; 173us; 17us; 176us; 18us; 175us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 170us; 23us; 171us; 24us; 172us; 27us; 162us; 28us; 163us; 29us; 164us; 30us; 165us; 31us; 166us; 19us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 43us; 213us; 44us; 136us; 45us; 138us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 19us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 43us; 213us; 44us; 136us; 45us; 138us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 19us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 43us; 213us; 44us; 136us; 45us; 138us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 19us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 43us; 213us; 44us; 136us; 45us; 138us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 19us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 43us; 213us; 44us; 136us; 45us; 138us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 19us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 43us; 213us; 44us; 136us; 45us; 138us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 19us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 43us; 213us; 44us; 136us; 45us; 138us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 19us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 43us; 213us; 44us; 136us; 45us; 138us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 19us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 43us; 213us; 44us; 136us; 45us; 138us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 19us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 43us; 213us; 44us; 136us; 45us; 138us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 19us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 43us; 213us; 44us; 136us; 45us; 138us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 19us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 43us; 213us; 44us; 136us; 45us; 138us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 19us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 43us; 213us; 44us; 136us; 45us; 138us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 19us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 43us; 213us; 44us; 136us; 45us; 138us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 19us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 43us; 213us; 44us; 136us; 45us; 138us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 1us; 32768us; 4us; 178us; 19us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 43us; 213us; 44us; 136us; 45us; 138us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 19us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 43us; 213us; 44us; 136us; 45us; 138us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 0us; 16451us; 1us; 32768us; 4us; 182us; 19us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 43us; 213us; 44us; 136us; 45us; 138us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 19us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 43us; 213us; 44us; 136us; 45us; 138us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 0us; 16452us; 1us; 32768us; 4us; 186us; 19us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 43us; 213us; 44us; 136us; 45us; 138us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 0us; 16453us; 0us; 16454us; 0us; 16455us; 0us; 16456us; 0us; 16457us; 19us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 43us; 213us; 44us; 136us; 45us; 138us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 19us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 43us; 213us; 44us; 136us; 45us; 138us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 0us; 16458us; 3us; 32768us; 4us; 198us; 29us; 201us; 55us; 197us; 1us; 16459us; 8us; 204us; 0us; 16460us; 3us; 32768us; 4us; 198us; 29us; 201us; 55us; 197us; 2us; 32768us; 5us; 200us; 8us; 204us; 0us; 16461us; 11us; 32768us; 4us; 193us; 13us; 195us; 28us; 211us; 29us; 201us; 43us; 213us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 197us; 56us; 209us; 57us; 210us; 1us; 16462us; 8us; 204us; 0us; 16463us; 19us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 43us; 213us; 44us; 136us; 45us; 138us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 0us; 16464us; 0us; 16466us; 19us; 32768us; 0us; 177us; 1us; 181us; 2us; 185us; 4us; 193us; 13us; 195us; 16us; 134us; 25us; 122us; 26us; 124us; 28us; 211us; 29us; 201us; 43us; 213us; 44us; 136us; 45us; 138us; 52us; 216us; 53us; 214us; 54us; 215us; 55us; 130us; 56us; 209us; 57us; 210us; 0us; 16468us; 0us; 16469us; 0us; 16470us; 2us; 32768us; 52us; 217us; 56us; 212us; 0us; 16471us; 0us; 16472us; 0us; 16473us; 0us; 16474us; 0us; 16475us; 0us; 16476us; 0us; 16477us; 0us; 16478us; 0us; 16479us; 0us; 16480us; 0us; 16481us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 7us; 8us; 10us; 11us; 18us; 19us; 21us; 22us; 23us; 27us; 31us; 33us; 34us; 36us; 40us; 42us; 46us; 49us; 50us; 53us; 54us; 56us; 57us; 59us; 61us; 67us; 69us; 71us; 72us; 78us; 80us; 82us; 83us; 84us; 86us; 92us; 93us; 126us; 128us; 129us; 162us; 163us; 165us; 198us; 199us; 200us; 202us; 203us; 219us; 220us; 241us; 242us; 258us; 259us; 260us; 262us; 264us; 284us; 304us; 320us; 336us; 364us; 392us; 394us; 422us; 450us; 451us; 453us; 473us; 489us; 491us; 494us; 496us; 497us; 499us; 500us; 502us; 504us; 524us; 544us; 560us; 576us; 604us; 632us; 633us; 635us; 655us; 671us; 691us; 707us; 727us; 743us; 771us; 772us; 800us; 803us; 805us; 825us; 841us; 843us; 844us; 846us; 866us; 882us; 884us; 885us; 886us; 887us; 888us; 898us; 900us; 928us; 931us; 933us; 961us; 962us; 963us; 969us; 974us; 975us; 977us; 978us; 982us; 984us; 988us; 990us; 991us; 992us; 1012us; 1027us; 1029us; 1049us; 1051us; 1052us; 1072us; 1073us; 1093us; 1108us; 1109us; 1113us; 1117us; 1118us; 1119us; 1120us; 1130us; 1140us; 1150us; 1160us; 1170us; 1180us; 1196us; 1211us; 1223us; 1238us; 1251us; 1267us; 1283us; 1299us; 1315us; 1331us; 1347us; 1363us; 1383us; 1403us; 1423us; 1443us; 1463us; 1483us; 1503us; 1523us; 1543us; 1563us; 1583us; 1603us; 1623us; 1643us; 1663us; 1665us; 1685us; 1705us; 1706us; 1708us; 1728us; 1748us; 1749us; 1751us; 1771us; 1772us; 1773us; 1774us; 1775us; 1776us; 1796us; 1816us; 1817us; 1821us; 1823us; 1824us; 1828us; 1831us; 1832us; 1844us; 1846us; 1847us; 1867us; 1868us; 1869us; 1889us; 1890us; 1891us; 1892us; 1895us; 1896us; 1897us; 1898us; 1899us; 1900us; 1901us; 1902us; 1903us; 1904us; 1905us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 1us; 2us; 1us; 2us; 3us; 3us; 4us; 6us; 6us; 0us; 1us; 1us; 3us; 3us; 0us; 2us; 3us; 1us; 1us; 2us; 2us; 3us; 1us; 7us; 7us; 2us; 5us; 9us; 7us; 7us; 7us; 5us; 5us; 4us; 3us; 5us; 1us; 1us; 1us; 2us; 2us; 2us; 2us; 3us; 4us; 2us; 2us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 5us; 3us; 3us; 6us; 6us; 4us; 1us; 1us; 1us; 1us; 3us; 2us; 1us; 3us; 2us; 2us; 4us; 0us; 1us; 1us; 3us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 4us; 5us; 5us; 5us; 5us; 5us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 10us; 10us; 10us; 11us; 11us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 13us; 13us; 13us; 14us; 14us; 14us; 15us; 15us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 17us; 17us; 17us; 17us; 17us; 17us; 18us; 18us; 18us; 18us; 18us; 19us; 19us; 20us; 20us; 21us; 21us; 21us; 21us; 22us; 23us; 24us; 24us; 25us; 25us; 25us; 25us; 25us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 65535us; 16388us; 16389us; 65535us; 65535us; 65535us; 16391us; 65535us; 65535us; 65535us; 65535us; 65535us; 16393us; 65535us; 16394us; 65535us; 16395us; 65535us; 65535us; 65535us; 65535us; 65535us; 16396us; 65535us; 65535us; 65535us; 16397us; 16399us; 65535us; 65535us; 16401us; 65535us; 65535us; 16402us; 65535us; 16404us; 65535us; 65535us; 16405us; 16406us; 65535us; 16407us; 65535us; 16408us; 65535us; 16409us; 65535us; 16410us; 16411us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16412us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16413us; 65535us; 16414us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16416us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16417us; 65535us; 65535us; 65535us; 65535us; 16418us; 16419us; 16420us; 16421us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16423us; 16424us; 65535us; 65535us; 16426us; 65535us; 16427us; 65535us; 65535us; 65535us; 65535us; 16430us; 16431us; 65535us; 65535us; 65535us; 65535us; 65535us; 16433us; 65535us; 65535us; 65535us; 65535us; 16436us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16451us; 65535us; 65535us; 65535us; 16452us; 65535us; 65535us; 16453us; 16454us; 16455us; 16456us; 16457us; 65535us; 65535us; 16458us; 65535us; 65535us; 16460us; 65535us; 65535us; 16461us; 65535us; 65535us; 16463us; 65535us; 16464us; 16466us; 65535us; 16468us; 16469us; 16470us; 65535us; 16471us; 16472us; 16473us; 16474us; 16475us; 16476us; 16477us; 16478us; 16479us; 16480us; 16481us; |]
let _fsyacc_reductions ()  =    [| 
# 545 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 554 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 55 "CPar.fsy"
                                                               Prog _1 
                   )
# 55 "CPar.fsy"
                 : Absyn.program));
# 565 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 "CPar.fsy"
                                                               [] 
                   )
# 60 "CPar.fsy"
                 : 'gentype_Topdecs));
# 575 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 61 "CPar.fsy"
                 : 'gentype_Topdecs));
# 587 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 65 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 65 "CPar.fsy"
                 : 'gentype_Topdec));
# 598 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 66 "CPar.fsy"
                                                               _1 
                   )
# 66 "CPar.fsy"
                 : 'gentype_Topdec));
# 609 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 84 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 84 "CPar.fsy"
                 : 'gentype_Vardec));
# 621 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 95 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 95 "CPar.fsy"
                 : 'gentype_Vardesc));
# 632 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 100 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 100 "CPar.fsy"
                 : 'gentype_Vardesc));
# 643 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 "CPar.fsy"
                                                               _2                                      
                   )
# 102 "CPar.fsy"
                 : 'gentype_Vardesc));
# 654 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 104 "CPar.fsy"
                 : 'gentype_Vardesc));
# 665 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 106 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 106 "CPar.fsy"
                 : 'gentype_Vardesc));
# 677 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 111 "CPar.fsy"
                 : 'gentype_Fundec));
# 690 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 113 "CPar.fsy"
                 : 'gentype_Fundec));
# 704 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 "CPar.fsy"
                                                               [] 
                   )
# 118 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 714 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 "CPar.fsy"
                                                               _1 
                   )
# 119 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 725 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 "CPar.fsy"
                                                               [_1]     
                   )
# 123 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 736 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 124 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 748 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 "CPar.fsy"
                                                               Block _2 
                   )
# 129 "CPar.fsy"
                 : 'gentype_Block));
# 759 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 "CPar.fsy"
                                                               [] 
                   )
# 133 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 769 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 134 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 781 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 135 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 793 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "CPar.fsy"
                                                               _1 
                   )
# 139 "CPar.fsy"
                 : 'gentype_Stmt));
# 804 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "CPar.fsy"
                                                               _1 
                   )
# 140 "CPar.fsy"
                 : 'gentype_Stmt));
# 815 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "CPar.fsy"
                                                               Expr(_1)             
                   )
# 144 "CPar.fsy"
                 : 'gentype_StmtM));
# 826 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "CPar.fsy"
                                                               Return None          
                   )
# 145 "CPar.fsy"
                 : 'gentype_StmtM));
# 836 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "CPar.fsy"
                                                               Return(Some(_2))     
                   )
# 146 "CPar.fsy"
                 : 'gentype_StmtM));
# 847 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "CPar.fsy"
                                                               _1                   
                   )
# 147 "CPar.fsy"
                 : 'gentype_StmtM));
# 858 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 148 "CPar.fsy"
                 : 'gentype_StmtM));
# 871 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_StmtCase in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "CPar.fsy"
                                                                         Switch(_3,_6)  
                   )
# 149 "CPar.fsy"
                 : 'gentype_StmtM));
# 883 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "CPar.fsy"
                                                               Break 
                   )
# 150 "CPar.fsy"
                 : 'gentype_StmtM));
# 893 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 151 "CPar.fsy"
                 : 'gentype_StmtM));
# 905 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "CPar.fsy"
                                                                         For(_3, _5, _7, _9) 
                   )
# 152 "CPar.fsy"
                 : 'gentype_StmtM));
# 919 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "CPar.fsy"
                                                               DoWhile(_2, _5)       
                   )
# 153 "CPar.fsy"
                 : 'gentype_StmtM));
# 931 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "CPar.fsy"
                                                               DoUntil(_2, _5)   
                   )
# 154 "CPar.fsy"
                 : 'gentype_StmtM));
# 943 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 158 "CPar.fsy"
                 : 'gentype_StmtU));
# 956 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 159 "CPar.fsy"
                 : 'gentype_StmtU));
# 968 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 160 "CPar.fsy"
                 : 'gentype_StmtU));
# 980 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "CPar.fsy"
                                                                          [Case(_2,_4)]    
                   )
# 164 "CPar.fsy"
                 : 'gentype_StmtCase));
# 992 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "CPar.fsy"
                                                                          [Default(_3)]    
                   )
# 165 "CPar.fsy"
                 : 'gentype_StmtCase));
# 1003 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtCase in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "CPar.fsy"
                                                                          Case(_2,_4) :: _5
                   )
# 166 "CPar.fsy"
                 : 'gentype_StmtCase));
# 1016 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "CPar.fsy"
                                                               Access _1           
                   )
# 170 "CPar.fsy"
                 : 'gentype_Expr));
# 1027 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "CPar.fsy"
                                                               _1                  
                   )
# 171 "CPar.fsy"
                 : 'gentype_Expr));
# 1038 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "CPar.fsy"
                                                               _1                  
                   )
# 175 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1049 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "CPar.fsy"
                                                                PreInc _2           
                   )
# 176 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1060 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "CPar.fsy"
                                                                PreDec _2           
                   )
# 177 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1071 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "CPar.fsy"
                                                                NextInc _1           
                   )
# 178 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1082 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "CPar.fsy"
                                                                NextDec _1           
                   )
# 179 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1093 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 180 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1105 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 181 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1117 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 182 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1128 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 183 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1139 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "CPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 184 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1149 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 185 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1161 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 186 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1173 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 187 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1185 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 188 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1197 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 189 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1209 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 190 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1221 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 191 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1233 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 192 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1245 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 193 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1257 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 194 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1269 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 195 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1281 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 "CPar.fsy"
                                                               Prim3(_1, _3, _5)
                   )
# 196 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1294 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 197 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 197 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1306 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 198 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1318 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 199 "CPar.fsy"
                                                               Max(_3, _5)         
                   )
# 199 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1330 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 200 "CPar.fsy"
                                                               Min(_3, _5)         
                   )
# 200 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1342 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 201 "CPar.fsy"
                                                               Abs(_3)             
                   )
# 201 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1353 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 209 "CPar.fsy"
                                                               CstI _1             
                   )
# 209 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1364 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstChar in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 210 "CPar.fsy"
                                                               CstC _1 
                   )
# 210 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1375 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 211 "CPar.fsy"
                                                               CstS _1 
                   )
# 211 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1386 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstFloat in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 "CPar.fsy"
                                                               CstF _1 
                   )
# 212 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1397 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 213 "CPar.fsy"
                                                               _2                  
                   )
# 213 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1408 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 214 "CPar.fsy"
                                                               Addr _2             
                   )
# 214 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1419 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 "CPar.fsy"
                                                               AccVar _1           
                   )
# 218 "CPar.fsy"
                 : 'gentype_Access));
# 1430 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 219 "CPar.fsy"
                                                               _2                  
                   )
# 219 "CPar.fsy"
                 : 'gentype_Access));
# 1441 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 220 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 220 "CPar.fsy"
                 : 'gentype_Access));
# 1452 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 221 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 221 "CPar.fsy"
                 : 'gentype_Access));
# 1463 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 222 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 222 "CPar.fsy"
                 : 'gentype_Access));
# 1475 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 226 "CPar.fsy"
                                                               []       
                   )
# 226 "CPar.fsy"
                 : 'gentype_Exprs));
# 1485 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 227 "CPar.fsy"
                                                               _1       
                   )
# 227 "CPar.fsy"
                 : 'gentype_Exprs));
# 1496 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 231 "CPar.fsy"
                                                               [_1]     
                   )
# 231 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1507 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 232 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 232 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1519 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 236 "CPar.fsy"
                                                               _1       
                   )
# 236 "CPar.fsy"
                 : 'gentype_Const));
# 1530 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 237 "CPar.fsy"
                                                               _1       
                   )
# 237 "CPar.fsy"
                 : 'gentype_Const));
# 1541 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 238 "CPar.fsy"
                                                               - _2     
                   )
# 238 "CPar.fsy"
                 : 'gentype_Const));
# 1552 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 239 "CPar.fsy"
                                                               -1       
                   )
# 239 "CPar.fsy"
                 : 'gentype_Const));
# 1562 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> char in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 243 "CPar.fsy"
                                                               _1       
                   )
# 243 "CPar.fsy"
                 : 'gentype_ConstChar));
# 1573 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 247 "CPar.fsy"
                                                               _1       
                   )
# 247 "CPar.fsy"
                 : 'gentype_ConstString));
# 1584 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> float32 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 251 "CPar.fsy"
                                                                _1      
                   )
# 251 "CPar.fsy"
                 : 'gentype_ConstFloat));
# 1595 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> float32 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 252 "CPar.fsy"
                                                                - _2    
                   )
# 252 "CPar.fsy"
                 : 'gentype_ConstFloat));
# 1606 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 257 "CPar.fsy"
                                                               TypI     
                   )
# 257 "CPar.fsy"
                 : 'gentype_Type));
# 1616 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 258 "CPar.fsy"
                                                               TypC     
                   )
# 258 "CPar.fsy"
                 : 'gentype_Type));
# 1626 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 259 "CPar.fsy"
                                                               TypS     
                   )
# 259 "CPar.fsy"
                 : 'gentype_Type));
# 1636 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 260 "CPar.fsy"
                                                               TypF     
                   )
# 260 "CPar.fsy"
                 : 'gentype_Type));
# 1646 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 261 "CPar.fsy"
                                                               TypB    
                   )
# 261 "CPar.fsy"
                 : 'gentype_Type));
|]
# 1657 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 61;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
